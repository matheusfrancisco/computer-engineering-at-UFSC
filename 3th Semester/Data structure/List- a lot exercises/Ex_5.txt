/*5. Uma lista é crescente se o conteúdo de cada célula não é maior que o conteúdo da célula seguinte. Escreva uma função que
recebe uma lista com cabeça e devolve 1 se a lista for crescente ou 0 caso contrario.*/

#include<stdio.h>
#include<stdlib.h>

struct celula{
    int conteudo;
    struct celula*seg;
}; typedef struct celula cel;

void inserir(int x, cel**lst);
cel*crescente(cel*lst);

int main(){
    cel*lst = NULL;

    inserir(1, &lst);
    inserir(2, &lst);
    inserir(3, &lst);
    inserir(4, &lst);
    inserir(5, &lst);

    int x;
    x = crescente(lst);

    printf("%i", x);

    return 0;
}

void inserir(int x, cel**lst){

	cel*p;
	cel*nova;
	nova = (cel *) malloc (sizeof(cel *));
	nova->conteudo = x;
	nova->seg = NULL;
	p = (*lst);
	if(p == NULL){
		(*lst) = nova;
	}else{
		while(p->seg != NULL){
			p = p->seg;
		}
		p->seg = nova;
	}
}

cel*crescente(cel*lst){
    cel*p;
    int x;

    if(lst == NULL){
        printf("LISTA VAZIA");
    }else{
        p = lst;
        x = p->conteudo;
        while(p->seg != NULL){
            if(p->conteudo < x){
                return 0;
            }
            x = p->conteudo;
            p = p->seg;
        }
    }
    return 1;
}
